%initializing route history
j = 3;

distAndVel = {[2 1.3 2 2 0.3 2 2 2 2 2 1 2 2 2 1.5  2 2 0.5 2 2 1 1.5 2 1 2 2 1.5 0.8 3;...   % distance
               1 0   1 1 0   1 1 1 1 1 1 1 1 1 1    1 1 1   0 0 0 1   0 0 1 1 1   0   1;...   % left wheel
               1 1   1 1 1   1 1 1 0 1 1 0 0 0 1    1 1 1   1 1 1 1   1 1 1 1 1   1   1];     % right wheel
              
              [1.5 1 1.5 0.5 2 2 2 2 0.5 1 2 2 1.5 2 2 1 2 2 2 2 2 1.5 1 1.5 1 2 2 2 0.7 3;...
               1   0 1   0   1 1 1 1 1   1 1 1 1   1 1 1 1 1 1 0 0 0   1 0   0 1 1 1 0   1;...
               1   1 1   1   1 1 1 1 1   0 1 0 1   0 0 0 1 1 1 1 1 1   1 1   1 1 1 1 1   1];
               
              [5.5 2.5 4 1.5 2 1 1 2 1.5 4.4 6 7.7 6 0.8 4      % for maze5/ test on maze7
               1   0   1 1   1 1 1 1 1   1   1 0   1 0 1
               1   1   1 0   1 0 1 0 1   0   1 1   1 1 1];
               
              [0.7 4 0.5 2.5 0.5 2 1.5 2 3 1 3.2 4 2.5 1 7 2 3.5 2 2
               0   1   0   1   0 1   0 1 1 1   1 1   0 1 1 1   0 1 1
               1   1   1   1   1 1   1 1 0 1   0 1   1 1 0 1   1 1 0];
               
              [0.8 3 0.7 5 1 2 1 1.5 4.3 4 2.2 2  
               0   1 0   1 0 1 1 1   1   1 0   1
               1   1 1   1 1 1 0 1   0   1 1   1];
               
              [2 1 7 2.2 3 3 2.7 1 6.2 2.5 2.5
               1 0 1 1   1 0 1   1 1   1   0
               1 1 1 0   1 1 0   1 0   1   1]
               
              };

    for i=1:size(distAndVel{j},2)
            if (~collision && ~goal)
                [hist, lHist, vel, gHist, collision, goal] = Drive(robot, distAndVel{j}(1,i), distAndVel{j}(2:3,i), maze, Ts);
                HistoryUpdate;
            end
    end
    
%end